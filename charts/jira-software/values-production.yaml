# https://helm.mox.sh
# https://github.com/javimox/helm-charts
#
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# @Notes
# We must set resources requests and limits for preventing OOM killer

## Atlassian Jira Software image version
## ref: https://hub.docker.com/r/atlassian/jira-software
image:
  # registry: hub.docker.com
  repository: atlassian/jira-software
  tag: 8.22.3
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets: {}
  #   - myRegistryKeySecretName

## String to partially override jira.fullname template (will maintain the release name)
nameOverride: ""

## String to fully override jira.fullname template
fullnameOverride: ""

## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#podsecuritycontext-v1-core
podSecurityContext:
  fsGroup: 2001

## Security context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
#  capabilities:
#    drop:
#    - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

## Service/Networking
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
## Kubernetes svc configuration
service:
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer
  type: NodePort
  ## Use serviceLoadBalancerIP to request a specific static IP, otherwise leave blank
  ##
  ## Avoid removing the http connector, as the Synchrony proxy health check, still requires HTTP
  ## HTTP Port, must be the same as ATL_TOMCAT_PORT (default: 8080)
  port: 8080
  ## HTTPS Port, in case ATL_TOMCAT_SCHEME is set to 'https'
  httpsPort:
  loadBalancerIP:
  ## Use nodePorts to requets some specific ports when usin NodePort
  ## nodePorts:
  ##   http: <to set explicitly, choose port between 30000-32767>
  ##   https: <to set explicitly, choose port between 30000-32767>
  ##
  nodePorts:
    http:
    https:

## Configure the ingress resource that allows you to access the
## Jira installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
ingress:
  ## Set to true to enable ingress record generation
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jira-server.local
      paths: []
  tls: []
  # - secretName: jira-server.local-tls
  #   hosts:
  #     - jira-server.local

## Resources. Mandatory, see @Notes above.
## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    memory: 2Gi
    cpu: 500m
  limits:
    memory: 2Gi

## Replication (without ReplicaSet)
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
replicaCount: 1

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

## Persistent Volume Claim
## Jira Home directory
## https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistence:
  enabled: true
  annotations: {}
  ## existingClaim needs the existing PVC name
  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 10Gi

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to nil, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:

# Additional volume mounts
extraVolumeMounts: []
  ## Example: Mount CA file
  # - name: ca-cert
  #   subPath: ca_cert
  #   mountPath: /path/to/ca_cert

# Additional volumes
extraVolumes: []
  ## Example: Add secret volume
  # - name: ca-cert
  #   secret:
  #     secretName: ca-cert
  #     items:
  #     - key: ca-cert
  #       path: ca_cert

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
schedulerName: ""

## Container Probes
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## Depending what values we give, Jira won't be reachable. In doubt, leave it as it is.
readinessProbe: {}
#  httpGet:
#    path: /status
#    port: http
#  initialDelaySeconds: 300
#  periodSeconds: 30
#  failureThreshold: 6
#  timeoutSeconds: 10

livenessProbe: {}
#  httpGet:
#    path: /status
#    port: http
#  initialDelaySeconds: 480
#  periodSeconds: 30
#  failureThreshold: 6
#  timeoutSeconds: 10

initContainerImages:
  # used keytool if 'caCerts' is enabled
  jdk: "adoptopenjdk:11-jdk-hotspot"

  # used pg_isready if 'postgresql' is enabled
  postgres: "postgres:9.6.11-alpine"

##
## Deploy PostgreSQL. If you are using an external DB, disable this.
## https://github.com/bitnami/charts/tree/master/bitnami/postgresql#parameters
##
postgresql:
  ## Whether to deploy a postgres server to satisfy the applications database requirements.
  enabled: true

  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: "11"
    pullPolicy: IfNotPresent

  fullnameOverride: jira-software-db

  persistence:
    size: 20Gi

  ## postgres user password (needed when upgrading Chart)
  ## generate random 10 character alphanumeric string if left empty
  postgresqlPassword: ""

  ## Creates 'databaseConnection.user' and '.database'
  initdbScriptsConfigMap: |-
    {{ .Release.Name }}-db-helper-cm

  ## Use existing secret to set the password for 'databaseConnection.user' in postgres
  ## https://github.com/javimox/helm-charts/tree/master/charts/jira-software#use-existing-secrets
  ## https://github.com/bitnami/charts/tree/master/bitnami/postgresql#initialize-a-fresh-instance
  ##
  # initdbScriptsSecret: alter-user-passwd

##
## Database connection information
## If postgresql is enabled and no database exists, it will be created (see db-helper ConfigMap)
##
databaseConnection:
  ## Database host
  host: jira-software-db

  ## non-root Username for Jira Database
  user: jirauser

  ## Database password. CHANGE IT :)
  password: "CHANGEME"

  ## Or specify a secret name. databaseConnection.password will be then ignored
  existingSecret: {}
  #  name: mysecret
  #  key: db-pw

  ## Database name
  database: jiradb

  ## lc_collate and lc_ctype, only in case database needs to be created
  lang: C

  ## Database port number
  port: 5432

  ## Jira specific database information
  ## https://hub.docker.com/r/atlassian/jira-software
  ## JDBC Prefix URL
  urlPrefix: "jdbc:postgresql"

  ## Database Driver
  ## https://hub.docker.com/r/atlassian/jira-software
  databaseDriver: "org.postgresql.Driver"

  ## Database Type
  ## https://hub.docker.com/r/atlassian/jira-software
  type: postgres72

  ##
  ## Database Schema Name
  ## https://hub.docker.com/r/atlassian/jira-software
  ## Depending of the type of the database, the Schema Name needs to be
  ## modified to one of the followings values:
  ## type: mssql      -> schemaName: dbo
  ## type: mysql      -> schemaName: public
  ## type: oracle10g  -> schemaName: NONE
  ## type: postgres72 -> schemaName: public
  schemaName: public

## DB DROP, use with caution!
## If postgresql.enabled is set to true and database exists, it will drop the db before creating a new one
## (see db-helper ConfigMap)
## This shouldn't be changed manually, instead run helm with --set databaseDrop.enabled=true --set databaseDrop.dropIt="yes"
## to be sure that you know what you are doing
databaseDrop:
  enabled: false
  dropIt: "no"

##
## Jira specific configurations
## https://hub.docker.com/r/atlassian/jira-software
## jira/secrets/cas
caCerts: {}
  # secret: my-secret
  # storepass: my-store-password
# caCertsEnv:
#   - name: VARIABLE
#     value: my-value
#
## Environment Variables that will be injected in the ConfigMap
## Default values unless otherwise stated
envVars:
  #
  ## Memory / Heap Size (JVM_MINIMUM_MEMORY) Mandatory, see @Notes above
  ## default: 1024m
  JVM_MINIMUM_MEMORY: 2048m
  ## Memory / Heap Size (JVM_MAXIMUM_MEMORY) Mandatory, see @Notes above
  ## default: 1024m
  JVM_MAXIMUM_MEMORY: 2048m
  ## The reserved code cache size of the JVM
  # JVM_RESERVED_CODE_CACHE_SIZE: 512m
  #
  ## Tomcat and Reverse Proxy Settings
  ## Jira running behind a reverse proxy server options
  ## Note - When ingress is enabled:
  ## These values are set automatically. Do not uncomment these proxy settings.
  # ATL_PROXY_NAME: ""
  # ATL_PROXY_PORT: ""
  # ATL_TOMCAT_PORT: 8080
  # ATL_TOMCAT_SCHEME: http
  # ATL_TOMCAT_SECURE: false
  # ATL_TOMCAT_CONTEXTPATH: ""
  #
  ## Tomcat/Catalina options
  ## ref: https://tomcat.apache.org/tomcat-7.0-doc/config/index.html
  # ATL_TOMCAT_MGMT_PORT: 8005
  # ATL_TOMCAT_MAXTHREADS: 100
  # ATL_TOMCAT_MINSPARETHREADS: 10
  # ATL_TOMCAT_CONNECTIONTIMEOUT: 20000
  # ATL_TOMCAT_ENABLELOOKUPS: false
  # ATL_TOMCAT_PROTOCOL: "HTTP/1.1"
  # ATL_TOMCAT_ACCEPTCOUNT: 10
  # ATL_TOMCAT_MAXHTTPHEADERSIZE: 8192
  #
  ## Cookie age (Remember Me maximum time remain logged-in)
  # ATL_AUTOLOGIN_COOKIE_AGE: 1209600
  #
  ## Home directory. This may be on a mounted volume; if so it
  ## should be writable by the user jira. See note below about UID mappings.
  # JIRA_HOME: ""
  #
  ## Optional connection pool database settings
  # ATL_DB_MAXIDLE: 20
  # ATL_DB_MAXWAITMILLIS: 30000
  # ATL_DB_MINEVICTABLEIDLETIMEMILLIS: 5000
  # ATL_DB_MINIDLE: 10
  # ATL_DB_REMOVEABANDONED: true
  # ATL_DB_REMOVEABANDONEDTIMEOUT: 300
  # ATL_DB_TESTONBORROW: false
  # ATL_DB_TESTWHILEIDLE: true
  # ATL_DB_TIMEBETWEENEVICTIONRUNSMILLIS: 30000
## End of Environment Variables (envVars)

## JVM_SUPPORT_RECOMMENDED_ARGS
## Additional container environment variables
# extraEnv: "-XX:MaxMetaspaceSize=512m -XX:MaxDirectMemorySize=10m"
